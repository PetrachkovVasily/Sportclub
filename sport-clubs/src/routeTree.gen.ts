/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as VisibleLayoutImport } from './routes/visibleLayout'
import { Route as ProfileImport } from './routes/profile'
import { Route as ClubImport } from './routes/club'
import { Route as CalendarImport } from './routes/calendar'
import { Route as IndexImport } from './routes/index'
import { Route as VisibleLayoutFooImport } from './routes/visibleLayout/foo'
import { Route as VisibleLayoutBarImport } from './routes/visibleLayout/bar'
import { Route as ProfileStatsImport } from './routes/profile/stats'
import { Route as ProfileGoalsImport } from './routes/profile/goals'
import { Route as ClubWorkoutsImport } from './routes/club/workouts'
import { Route as ClubScheduleImport } from './routes/club/schedule'
import { Route as ClubRatingImport } from './routes/club/rating'
import { Route as ClubAchievementsImport } from './routes/club/achievements'

// Create/Update Routes

const VisibleLayoutRoute = VisibleLayoutImport.update({
  id: '/visibleLayout',
  path: '/visibleLayout',
  getParentRoute: () => rootRoute,
} as any)

const ProfileRoute = ProfileImport.update({
  id: '/profile',
  path: '/profile',
  getParentRoute: () => rootRoute,
} as any)

const ClubRoute = ClubImport.update({
  id: '/club',
  path: '/club',
  getParentRoute: () => rootRoute,
} as any)

const CalendarRoute = CalendarImport.update({
  id: '/calendar',
  path: '/calendar',
  getParentRoute: () => rootRoute,
} as any)

const IndexRoute = IndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRoute,
} as any)

const VisibleLayoutFooRoute = VisibleLayoutFooImport.update({
  id: '/foo',
  path: '/foo',
  getParentRoute: () => VisibleLayoutRoute,
} as any)

const VisibleLayoutBarRoute = VisibleLayoutBarImport.update({
  id: '/bar',
  path: '/bar',
  getParentRoute: () => VisibleLayoutRoute,
} as any)

const ProfileStatsRoute = ProfileStatsImport.update({
  id: '/stats',
  path: '/stats',
  getParentRoute: () => ProfileRoute,
} as any)

const ProfileGoalsRoute = ProfileGoalsImport.update({
  id: '/goals',
  path: '/goals',
  getParentRoute: () => ProfileRoute,
} as any)

const ClubWorkoutsRoute = ClubWorkoutsImport.update({
  id: '/workouts',
  path: '/workouts',
  getParentRoute: () => ClubRoute,
} as any)

const ClubScheduleRoute = ClubScheduleImport.update({
  id: '/schedule',
  path: '/schedule',
  getParentRoute: () => ClubRoute,
} as any)

const ClubRatingRoute = ClubRatingImport.update({
  id: '/rating',
  path: '/rating',
  getParentRoute: () => ClubRoute,
} as any)

const ClubAchievementsRoute = ClubAchievementsImport.update({
  id: '/achievements',
  path: '/achievements',
  getParentRoute: () => ClubRoute,
} as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexImport
      parentRoute: typeof rootRoute
    }
    '/calendar': {
      id: '/calendar'
      path: '/calendar'
      fullPath: '/calendar'
      preLoaderRoute: typeof CalendarImport
      parentRoute: typeof rootRoute
    }
    '/club': {
      id: '/club'
      path: '/club'
      fullPath: '/club'
      preLoaderRoute: typeof ClubImport
      parentRoute: typeof rootRoute
    }
    '/profile': {
      id: '/profile'
      path: '/profile'
      fullPath: '/profile'
      preLoaderRoute: typeof ProfileImport
      parentRoute: typeof rootRoute
    }
    '/visibleLayout': {
      id: '/visibleLayout'
      path: '/visibleLayout'
      fullPath: '/visibleLayout'
      preLoaderRoute: typeof VisibleLayoutImport
      parentRoute: typeof rootRoute
    }
    '/club/achievements': {
      id: '/club/achievements'
      path: '/achievements'
      fullPath: '/club/achievements'
      preLoaderRoute: typeof ClubAchievementsImport
      parentRoute: typeof ClubImport
    }
    '/club/rating': {
      id: '/club/rating'
      path: '/rating'
      fullPath: '/club/rating'
      preLoaderRoute: typeof ClubRatingImport
      parentRoute: typeof ClubImport
    }
    '/club/schedule': {
      id: '/club/schedule'
      path: '/schedule'
      fullPath: '/club/schedule'
      preLoaderRoute: typeof ClubScheduleImport
      parentRoute: typeof ClubImport
    }
    '/club/workouts': {
      id: '/club/workouts'
      path: '/workouts'
      fullPath: '/club/workouts'
      preLoaderRoute: typeof ClubWorkoutsImport
      parentRoute: typeof ClubImport
    }
    '/profile/goals': {
      id: '/profile/goals'
      path: '/goals'
      fullPath: '/profile/goals'
      preLoaderRoute: typeof ProfileGoalsImport
      parentRoute: typeof ProfileImport
    }
    '/profile/stats': {
      id: '/profile/stats'
      path: '/stats'
      fullPath: '/profile/stats'
      preLoaderRoute: typeof ProfileStatsImport
      parentRoute: typeof ProfileImport
    }
    '/visibleLayout/bar': {
      id: '/visibleLayout/bar'
      path: '/bar'
      fullPath: '/visibleLayout/bar'
      preLoaderRoute: typeof VisibleLayoutBarImport
      parentRoute: typeof VisibleLayoutImport
    }
    '/visibleLayout/foo': {
      id: '/visibleLayout/foo'
      path: '/foo'
      fullPath: '/visibleLayout/foo'
      preLoaderRoute: typeof VisibleLayoutFooImport
      parentRoute: typeof VisibleLayoutImport
    }
  }
}

// Create and export the route tree

interface ClubRouteChildren {
  ClubAchievementsRoute: typeof ClubAchievementsRoute
  ClubRatingRoute: typeof ClubRatingRoute
  ClubScheduleRoute: typeof ClubScheduleRoute
  ClubWorkoutsRoute: typeof ClubWorkoutsRoute
}

const ClubRouteChildren: ClubRouteChildren = {
  ClubAchievementsRoute: ClubAchievementsRoute,
  ClubRatingRoute: ClubRatingRoute,
  ClubScheduleRoute: ClubScheduleRoute,
  ClubWorkoutsRoute: ClubWorkoutsRoute,
}

const ClubRouteWithChildren = ClubRoute._addFileChildren(ClubRouteChildren)

interface ProfileRouteChildren {
  ProfileGoalsRoute: typeof ProfileGoalsRoute
  ProfileStatsRoute: typeof ProfileStatsRoute
}

const ProfileRouteChildren: ProfileRouteChildren = {
  ProfileGoalsRoute: ProfileGoalsRoute,
  ProfileStatsRoute: ProfileStatsRoute,
}

const ProfileRouteWithChildren =
  ProfileRoute._addFileChildren(ProfileRouteChildren)

interface VisibleLayoutRouteChildren {
  VisibleLayoutBarRoute: typeof VisibleLayoutBarRoute
  VisibleLayoutFooRoute: typeof VisibleLayoutFooRoute
}

const VisibleLayoutRouteChildren: VisibleLayoutRouteChildren = {
  VisibleLayoutBarRoute: VisibleLayoutBarRoute,
  VisibleLayoutFooRoute: VisibleLayoutFooRoute,
}

const VisibleLayoutRouteWithChildren = VisibleLayoutRoute._addFileChildren(
  VisibleLayoutRouteChildren,
)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/calendar': typeof CalendarRoute
  '/club': typeof ClubRouteWithChildren
  '/profile': typeof ProfileRouteWithChildren
  '/visibleLayout': typeof VisibleLayoutRouteWithChildren
  '/club/achievements': typeof ClubAchievementsRoute
  '/club/rating': typeof ClubRatingRoute
  '/club/schedule': typeof ClubScheduleRoute
  '/club/workouts': typeof ClubWorkoutsRoute
  '/profile/goals': typeof ProfileGoalsRoute
  '/profile/stats': typeof ProfileStatsRoute
  '/visibleLayout/bar': typeof VisibleLayoutBarRoute
  '/visibleLayout/foo': typeof VisibleLayoutFooRoute
}

export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/calendar': typeof CalendarRoute
  '/club': typeof ClubRouteWithChildren
  '/profile': typeof ProfileRouteWithChildren
  '/visibleLayout': typeof VisibleLayoutRouteWithChildren
  '/club/achievements': typeof ClubAchievementsRoute
  '/club/rating': typeof ClubRatingRoute
  '/club/schedule': typeof ClubScheduleRoute
  '/club/workouts': typeof ClubWorkoutsRoute
  '/profile/goals': typeof ProfileGoalsRoute
  '/profile/stats': typeof ProfileStatsRoute
  '/visibleLayout/bar': typeof VisibleLayoutBarRoute
  '/visibleLayout/foo': typeof VisibleLayoutFooRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/': typeof IndexRoute
  '/calendar': typeof CalendarRoute
  '/club': typeof ClubRouteWithChildren
  '/profile': typeof ProfileRouteWithChildren
  '/visibleLayout': typeof VisibleLayoutRouteWithChildren
  '/club/achievements': typeof ClubAchievementsRoute
  '/club/rating': typeof ClubRatingRoute
  '/club/schedule': typeof ClubScheduleRoute
  '/club/workouts': typeof ClubWorkoutsRoute
  '/profile/goals': typeof ProfileGoalsRoute
  '/profile/stats': typeof ProfileStatsRoute
  '/visibleLayout/bar': typeof VisibleLayoutBarRoute
  '/visibleLayout/foo': typeof VisibleLayoutFooRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/calendar'
    | '/club'
    | '/profile'
    | '/visibleLayout'
    | '/club/achievements'
    | '/club/rating'
    | '/club/schedule'
    | '/club/workouts'
    | '/profile/goals'
    | '/profile/stats'
    | '/visibleLayout/bar'
    | '/visibleLayout/foo'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/calendar'
    | '/club'
    | '/profile'
    | '/visibleLayout'
    | '/club/achievements'
    | '/club/rating'
    | '/club/schedule'
    | '/club/workouts'
    | '/profile/goals'
    | '/profile/stats'
    | '/visibleLayout/bar'
    | '/visibleLayout/foo'
  id:
    | '__root__'
    | '/'
    | '/calendar'
    | '/club'
    | '/profile'
    | '/visibleLayout'
    | '/club/achievements'
    | '/club/rating'
    | '/club/schedule'
    | '/club/workouts'
    | '/profile/goals'
    | '/profile/stats'
    | '/visibleLayout/bar'
    | '/visibleLayout/foo'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  CalendarRoute: typeof CalendarRoute
  ClubRoute: typeof ClubRouteWithChildren
  ProfileRoute: typeof ProfileRouteWithChildren
  VisibleLayoutRoute: typeof VisibleLayoutRouteWithChildren
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  CalendarRoute: CalendarRoute,
  ClubRoute: ClubRouteWithChildren,
  ProfileRoute: ProfileRouteWithChildren,
  VisibleLayoutRoute: VisibleLayoutRouteWithChildren,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/",
        "/calendar",
        "/club",
        "/profile",
        "/visibleLayout"
      ]
    },
    "/": {
      "filePath": "index.tsx"
    },
    "/calendar": {
      "filePath": "calendar.tsx"
    },
    "/club": {
      "filePath": "club.tsx",
      "children": [
        "/club/achievements",
        "/club/rating",
        "/club/schedule",
        "/club/workouts"
      ]
    },
    "/profile": {
      "filePath": "profile.tsx",
      "children": [
        "/profile/goals",
        "/profile/stats"
      ]
    },
    "/visibleLayout": {
      "filePath": "visibleLayout.tsx",
      "children": [
        "/visibleLayout/bar",
        "/visibleLayout/foo"
      ]
    },
    "/club/achievements": {
      "filePath": "club/achievements.tsx",
      "parent": "/club"
    },
    "/club/rating": {
      "filePath": "club/rating.tsx",
      "parent": "/club"
    },
    "/club/schedule": {
      "filePath": "club/schedule.tsx",
      "parent": "/club"
    },
    "/club/workouts": {
      "filePath": "club/workouts.tsx",
      "parent": "/club"
    },
    "/profile/goals": {
      "filePath": "profile/goals.tsx",
      "parent": "/profile"
    },
    "/profile/stats": {
      "filePath": "profile/stats.tsx",
      "parent": "/profile"
    },
    "/visibleLayout/bar": {
      "filePath": "visibleLayout/bar.tsx",
      "parent": "/visibleLayout"
    },
    "/visibleLayout/foo": {
      "filePath": "visibleLayout/foo.tsx",
      "parent": "/visibleLayout"
    }
  }
}
ROUTE_MANIFEST_END */
