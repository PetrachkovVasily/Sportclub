/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as VisibleLayoutImport } from './routes/visibleLayout'
import { Route as ClubsListImport } from './routes/clubsList'
import { Route as CalendarImport } from './routes/calendar'
import { Route as IndexImport } from './routes/index'
import { Route as VisibleLayoutFooImport } from './routes/visibleLayout/foo'
import { Route as VisibleLayoutBarImport } from './routes/visibleLayout/bar'
import { Route as ProfileIdImport } from './routes/profile/$id'
import { Route as ClubIdImport } from './routes/club/$id'
import { Route as ChatIdImport } from './routes/chat/$id'
import { Route as ProfileIdStatsImport } from './routes/profile/$id/stats'
import { Route as ProfileIdGoalsImport } from './routes/profile/$id/goals'
import { Route as ClubIdWorkoutsImport } from './routes/club/$id/workouts'
import { Route as ClubIdScheduleImport } from './routes/club/$id/schedule'
import { Route as ClubIdRatingImport } from './routes/club/$id/rating'
import { Route as ClubIdAchievementsImport } from './routes/club/$id/achievements'

// Create/Update Routes

const VisibleLayoutRoute = VisibleLayoutImport.update({
  id: '/visibleLayout',
  path: '/visibleLayout',
  getParentRoute: () => rootRoute,
} as any)

const ClubsListRoute = ClubsListImport.update({
  id: '/clubsList',
  path: '/clubsList',
  getParentRoute: () => rootRoute,
} as any)

const CalendarRoute = CalendarImport.update({
  id: '/calendar',
  path: '/calendar',
  getParentRoute: () => rootRoute,
} as any)

const IndexRoute = IndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRoute,
} as any)

const VisibleLayoutFooRoute = VisibleLayoutFooImport.update({
  id: '/foo',
  path: '/foo',
  getParentRoute: () => VisibleLayoutRoute,
} as any)

const VisibleLayoutBarRoute = VisibleLayoutBarImport.update({
  id: '/bar',
  path: '/bar',
  getParentRoute: () => VisibleLayoutRoute,
} as any)

const ProfileIdRoute = ProfileIdImport.update({
  id: '/profile/$id',
  path: '/profile/$id',
  getParentRoute: () => rootRoute,
} as any)

const ClubIdRoute = ClubIdImport.update({
  id: '/club/$id',
  path: '/club/$id',
  getParentRoute: () => rootRoute,
} as any)

const ChatIdRoute = ChatIdImport.update({
  id: '/chat/$id',
  path: '/chat/$id',
  getParentRoute: () => rootRoute,
} as any)

const ProfileIdStatsRoute = ProfileIdStatsImport.update({
  id: '/stats',
  path: '/stats',
  getParentRoute: () => ProfileIdRoute,
} as any)

const ProfileIdGoalsRoute = ProfileIdGoalsImport.update({
  id: '/goals',
  path: '/goals',
  getParentRoute: () => ProfileIdRoute,
} as any)

const ClubIdWorkoutsRoute = ClubIdWorkoutsImport.update({
  id: '/workouts',
  path: '/workouts',
  getParentRoute: () => ClubIdRoute,
} as any)

const ClubIdScheduleRoute = ClubIdScheduleImport.update({
  id: '/schedule',
  path: '/schedule',
  getParentRoute: () => ClubIdRoute,
} as any)

const ClubIdRatingRoute = ClubIdRatingImport.update({
  id: '/rating',
  path: '/rating',
  getParentRoute: () => ClubIdRoute,
} as any)

const ClubIdAchievementsRoute = ClubIdAchievementsImport.update({
  id: '/achievements',
  path: '/achievements',
  getParentRoute: () => ClubIdRoute,
} as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexImport
      parentRoute: typeof rootRoute
    }
    '/calendar': {
      id: '/calendar'
      path: '/calendar'
      fullPath: '/calendar'
      preLoaderRoute: typeof CalendarImport
      parentRoute: typeof rootRoute
    }
    '/clubsList': {
      id: '/clubsList'
      path: '/clubsList'
      fullPath: '/clubsList'
      preLoaderRoute: typeof ClubsListImport
      parentRoute: typeof rootRoute
    }
    '/visibleLayout': {
      id: '/visibleLayout'
      path: '/visibleLayout'
      fullPath: '/visibleLayout'
      preLoaderRoute: typeof VisibleLayoutImport
      parentRoute: typeof rootRoute
    }
    '/chat/$id': {
      id: '/chat/$id'
      path: '/chat/$id'
      fullPath: '/chat/$id'
      preLoaderRoute: typeof ChatIdImport
      parentRoute: typeof rootRoute
    }
    '/club/$id': {
      id: '/club/$id'
      path: '/club/$id'
      fullPath: '/club/$id'
      preLoaderRoute: typeof ClubIdImport
      parentRoute: typeof rootRoute
    }
    '/profile/$id': {
      id: '/profile/$id'
      path: '/profile/$id'
      fullPath: '/profile/$id'
      preLoaderRoute: typeof ProfileIdImport
      parentRoute: typeof rootRoute
    }
    '/visibleLayout/bar': {
      id: '/visibleLayout/bar'
      path: '/bar'
      fullPath: '/visibleLayout/bar'
      preLoaderRoute: typeof VisibleLayoutBarImport
      parentRoute: typeof VisibleLayoutImport
    }
    '/visibleLayout/foo': {
      id: '/visibleLayout/foo'
      path: '/foo'
      fullPath: '/visibleLayout/foo'
      preLoaderRoute: typeof VisibleLayoutFooImport
      parentRoute: typeof VisibleLayoutImport
    }
    '/club/$id/achievements': {
      id: '/club/$id/achievements'
      path: '/achievements'
      fullPath: '/club/$id/achievements'
      preLoaderRoute: typeof ClubIdAchievementsImport
      parentRoute: typeof ClubIdImport
    }
    '/club/$id/rating': {
      id: '/club/$id/rating'
      path: '/rating'
      fullPath: '/club/$id/rating'
      preLoaderRoute: typeof ClubIdRatingImport
      parentRoute: typeof ClubIdImport
    }
    '/club/$id/schedule': {
      id: '/club/$id/schedule'
      path: '/schedule'
      fullPath: '/club/$id/schedule'
      preLoaderRoute: typeof ClubIdScheduleImport
      parentRoute: typeof ClubIdImport
    }
    '/club/$id/workouts': {
      id: '/club/$id/workouts'
      path: '/workouts'
      fullPath: '/club/$id/workouts'
      preLoaderRoute: typeof ClubIdWorkoutsImport
      parentRoute: typeof ClubIdImport
    }
    '/profile/$id/goals': {
      id: '/profile/$id/goals'
      path: '/goals'
      fullPath: '/profile/$id/goals'
      preLoaderRoute: typeof ProfileIdGoalsImport
      parentRoute: typeof ProfileIdImport
    }
    '/profile/$id/stats': {
      id: '/profile/$id/stats'
      path: '/stats'
      fullPath: '/profile/$id/stats'
      preLoaderRoute: typeof ProfileIdStatsImport
      parentRoute: typeof ProfileIdImport
    }
  }
}

// Create and export the route tree

interface VisibleLayoutRouteChildren {
  VisibleLayoutBarRoute: typeof VisibleLayoutBarRoute
  VisibleLayoutFooRoute: typeof VisibleLayoutFooRoute
}

const VisibleLayoutRouteChildren: VisibleLayoutRouteChildren = {
  VisibleLayoutBarRoute: VisibleLayoutBarRoute,
  VisibleLayoutFooRoute: VisibleLayoutFooRoute,
}

const VisibleLayoutRouteWithChildren = VisibleLayoutRoute._addFileChildren(
  VisibleLayoutRouteChildren,
)

interface ClubIdRouteChildren {
  ClubIdAchievementsRoute: typeof ClubIdAchievementsRoute
  ClubIdRatingRoute: typeof ClubIdRatingRoute
  ClubIdScheduleRoute: typeof ClubIdScheduleRoute
  ClubIdWorkoutsRoute: typeof ClubIdWorkoutsRoute
}

const ClubIdRouteChildren: ClubIdRouteChildren = {
  ClubIdAchievementsRoute: ClubIdAchievementsRoute,
  ClubIdRatingRoute: ClubIdRatingRoute,
  ClubIdScheduleRoute: ClubIdScheduleRoute,
  ClubIdWorkoutsRoute: ClubIdWorkoutsRoute,
}

const ClubIdRouteWithChildren =
  ClubIdRoute._addFileChildren(ClubIdRouteChildren)

interface ProfileIdRouteChildren {
  ProfileIdGoalsRoute: typeof ProfileIdGoalsRoute
  ProfileIdStatsRoute: typeof ProfileIdStatsRoute
}

const ProfileIdRouteChildren: ProfileIdRouteChildren = {
  ProfileIdGoalsRoute: ProfileIdGoalsRoute,
  ProfileIdStatsRoute: ProfileIdStatsRoute,
}

const ProfileIdRouteWithChildren = ProfileIdRoute._addFileChildren(
  ProfileIdRouteChildren,
)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/calendar': typeof CalendarRoute
  '/clubsList': typeof ClubsListRoute
  '/visibleLayout': typeof VisibleLayoutRouteWithChildren
  '/chat/$id': typeof ChatIdRoute
  '/club/$id': typeof ClubIdRouteWithChildren
  '/profile/$id': typeof ProfileIdRouteWithChildren
  '/visibleLayout/bar': typeof VisibleLayoutBarRoute
  '/visibleLayout/foo': typeof VisibleLayoutFooRoute
  '/club/$id/achievements': typeof ClubIdAchievementsRoute
  '/club/$id/rating': typeof ClubIdRatingRoute
  '/club/$id/schedule': typeof ClubIdScheduleRoute
  '/club/$id/workouts': typeof ClubIdWorkoutsRoute
  '/profile/$id/goals': typeof ProfileIdGoalsRoute
  '/profile/$id/stats': typeof ProfileIdStatsRoute
}

export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/calendar': typeof CalendarRoute
  '/clubsList': typeof ClubsListRoute
  '/visibleLayout': typeof VisibleLayoutRouteWithChildren
  '/chat/$id': typeof ChatIdRoute
  '/club/$id': typeof ClubIdRouteWithChildren
  '/profile/$id': typeof ProfileIdRouteWithChildren
  '/visibleLayout/bar': typeof VisibleLayoutBarRoute
  '/visibleLayout/foo': typeof VisibleLayoutFooRoute
  '/club/$id/achievements': typeof ClubIdAchievementsRoute
  '/club/$id/rating': typeof ClubIdRatingRoute
  '/club/$id/schedule': typeof ClubIdScheduleRoute
  '/club/$id/workouts': typeof ClubIdWorkoutsRoute
  '/profile/$id/goals': typeof ProfileIdGoalsRoute
  '/profile/$id/stats': typeof ProfileIdStatsRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/': typeof IndexRoute
  '/calendar': typeof CalendarRoute
  '/clubsList': typeof ClubsListRoute
  '/visibleLayout': typeof VisibleLayoutRouteWithChildren
  '/chat/$id': typeof ChatIdRoute
  '/club/$id': typeof ClubIdRouteWithChildren
  '/profile/$id': typeof ProfileIdRouteWithChildren
  '/visibleLayout/bar': typeof VisibleLayoutBarRoute
  '/visibleLayout/foo': typeof VisibleLayoutFooRoute
  '/club/$id/achievements': typeof ClubIdAchievementsRoute
  '/club/$id/rating': typeof ClubIdRatingRoute
  '/club/$id/schedule': typeof ClubIdScheduleRoute
  '/club/$id/workouts': typeof ClubIdWorkoutsRoute
  '/profile/$id/goals': typeof ProfileIdGoalsRoute
  '/profile/$id/stats': typeof ProfileIdStatsRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/calendar'
    | '/clubsList'
    | '/visibleLayout'
    | '/chat/$id'
    | '/club/$id'
    | '/profile/$id'
    | '/visibleLayout/bar'
    | '/visibleLayout/foo'
    | '/club/$id/achievements'
    | '/club/$id/rating'
    | '/club/$id/schedule'
    | '/club/$id/workouts'
    | '/profile/$id/goals'
    | '/profile/$id/stats'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/calendar'
    | '/clubsList'
    | '/visibleLayout'
    | '/chat/$id'
    | '/club/$id'
    | '/profile/$id'
    | '/visibleLayout/bar'
    | '/visibleLayout/foo'
    | '/club/$id/achievements'
    | '/club/$id/rating'
    | '/club/$id/schedule'
    | '/club/$id/workouts'
    | '/profile/$id/goals'
    | '/profile/$id/stats'
  id:
    | '__root__'
    | '/'
    | '/calendar'
    | '/clubsList'
    | '/visibleLayout'
    | '/chat/$id'
    | '/club/$id'
    | '/profile/$id'
    | '/visibleLayout/bar'
    | '/visibleLayout/foo'
    | '/club/$id/achievements'
    | '/club/$id/rating'
    | '/club/$id/schedule'
    | '/club/$id/workouts'
    | '/profile/$id/goals'
    | '/profile/$id/stats'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  CalendarRoute: typeof CalendarRoute
  ClubsListRoute: typeof ClubsListRoute
  VisibleLayoutRoute: typeof VisibleLayoutRouteWithChildren
  ChatIdRoute: typeof ChatIdRoute
  ClubIdRoute: typeof ClubIdRouteWithChildren
  ProfileIdRoute: typeof ProfileIdRouteWithChildren
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  CalendarRoute: CalendarRoute,
  ClubsListRoute: ClubsListRoute,
  VisibleLayoutRoute: VisibleLayoutRouteWithChildren,
  ChatIdRoute: ChatIdRoute,
  ClubIdRoute: ClubIdRouteWithChildren,
  ProfileIdRoute: ProfileIdRouteWithChildren,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/",
        "/calendar",
        "/clubsList",
        "/visibleLayout",
        "/chat/$id",
        "/club/$id",
        "/profile/$id"
      ]
    },
    "/": {
      "filePath": "index.tsx"
    },
    "/calendar": {
      "filePath": "calendar.tsx"
    },
    "/clubsList": {
      "filePath": "clubsList.tsx"
    },
    "/visibleLayout": {
      "filePath": "visibleLayout.tsx",
      "children": [
        "/visibleLayout/bar",
        "/visibleLayout/foo"
      ]
    },
    "/chat/$id": {
      "filePath": "chat/$id.tsx"
    },
    "/club/$id": {
      "filePath": "club/$id.tsx",
      "children": [
        "/club/$id/achievements",
        "/club/$id/rating",
        "/club/$id/schedule",
        "/club/$id/workouts"
      ]
    },
    "/profile/$id": {
      "filePath": "profile/$id.tsx",
      "children": [
        "/profile/$id/goals",
        "/profile/$id/stats"
      ]
    },
    "/visibleLayout/bar": {
      "filePath": "visibleLayout/bar.tsx",
      "parent": "/visibleLayout"
    },
    "/visibleLayout/foo": {
      "filePath": "visibleLayout/foo.tsx",
      "parent": "/visibleLayout"
    },
    "/club/$id/achievements": {
      "filePath": "club/$id/achievements.tsx",
      "parent": "/club/$id"
    },
    "/club/$id/rating": {
      "filePath": "club/$id/rating.tsx",
      "parent": "/club/$id"
    },
    "/club/$id/schedule": {
      "filePath": "club/$id/schedule.tsx",
      "parent": "/club/$id"
    },
    "/club/$id/workouts": {
      "filePath": "club/$id/workouts.tsx",
      "parent": "/club/$id"
    },
    "/profile/$id/goals": {
      "filePath": "profile/$id/goals.tsx",
      "parent": "/profile/$id"
    },
    "/profile/$id/stats": {
      "filePath": "profile/$id/stats.tsx",
      "parent": "/profile/$id"
    }
  }
}
ROUTE_MANIFEST_END */
